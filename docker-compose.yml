version: '3.8'

services:
  app:
    container_name: homequest-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://homequest:homequest123@postgres:5432/homequest_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_USE_SSL: "false"
      MINIO_BUCKET: homequest-uploads
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-change-in-production}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - homequest-network
    restart: unless-stopped
    command: npm run dev

  postgres:
    container_name: homequest-postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: homequest
      POSTGRES_PASSWORD: homequest123
      POSTGRES_DB: homequest_db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - homequest-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U homequest -d homequest_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: homequest-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ""
    volumes:
      - redis-data:/data
    networks:
      - homequest-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    container_name: homequest-minio
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DEFAULT_BUCKETS: homequest-uploads
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - homequest-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/homequest-uploads || true;
      /usr/bin/mc mb myminio/homequest-exports || true;
      /usr/bin/mc mb myminio/homequest-thumbnails || true;
      /usr/bin/mc anonymous set public myminio/homequest-thumbnails;
      exit 0;
      "
    networks:
      - homequest-network

  redis-commander:
    container_name: homequest-redis-commander
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - homequest-network
    restart: unless-stopped

  pgadmin:
    container_name: homequest-pgadmin
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@homequest.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - homequest-network
    restart: unless-stopped

networks:
  homequest-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  minio-data:
  pgadmin-data: